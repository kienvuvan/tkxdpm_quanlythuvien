/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package card.views;

import book.views.ManagerBookForm;
import card.controller.CardController;
import card.dao.MysqlBorrowCardDao;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import java.sql.Date;
import java.text.SimpleDateFormat;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import login.views.ChooseLoginForm;
import util.Utils;
import view.ManagementForm;

/**
 *
 * @author Linh
 */
public class ActivateCardForm extends javax.swing.JFrame {

    private String idLib;
    private CardController cardController;
    private DefaultTableModel model, modelTableCard;
    TableCellRenderer tableCellRenderer = new DefaultTableCellRenderer() {

        SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");

        @Override
        public Component getTableCellRendererComponent(JTable table,
                Object value, boolean isSelected, boolean hasFocus,
                int row, int column) {
            System.out.println("Hello");
            if (value instanceof Date) {
                value = f.format(value);
            }
            return super.getTableCellRendererComponent(table, value, isSelected,
                    hasFocus, row, column);
        }

    };

    /**
     * Creates new form ActivateCardForm
     */
    public ActivateCardForm(String idLib) {
        initComponents();
        showManagerCardPanel();
        setLocationRelativeTo(null);
        this.idLib = idLib;
        expiredDateActivateField.getEditor().setEditable(false);
        model = (DefaultTableModel) tableRegistrationCard.getModel();
        modelTableCard = (DefaultTableModel) tableCard.getModel();
        tableCard.getColumnModel().getColumn(3).setCellRenderer(tableCellRenderer);
        tableRegistrationCard.setRowSelectionAllowed(true);
        tableRegistrationCard.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tableCard.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        cardController = new CardController();
        expiredDateField.getEditor().setEditable(false);
        showInforCard(model);
        showAllCardActive(modelTableCard);

    }

    private void showInforCard(DefaultTableModel model) {
        int result = cardController.showInforCardRegisted(model);
        switch (result) {
            case CardController.RESULT_NULL_POINT:
                JOptionPane.showMessageDialog(this, "Lỗi truyền parameter");
                break;
            case CardController.RESULT_NOT_FOUND:
                JOptionPane.showMessageDialog(this, "Không có thẻ nào cần kích hoạt");
                break;
            case CardController.RESULT_FOUND:
                break;
            case CardController.RESULT_SQLITE:
                JOptionPane.showMessageDialog(this, "Kiểm tra lại kết nối mạng");
                break;
        }
    }

    private void showAllCardActive(DefaultTableModel model) {
        int result = cardController.showAllCardActive(model);
        switch (result) {
            case CardController.RESULT_NULL_POINT:
                JOptionPane.showMessageDialog(this, "Lỗi truyền parameter");
                break;
            case CardController.RESULT_NOT_FOUND:
                JOptionPane.showMessageDialog(this, "Hệ thống chưa có người dùng nào có thẻ");
                break;
            case CardController.RESULT_FOUND:
                break;
            case CardController.RESULT_SQLITE:
                JOptionPane.showMessageDialog(this, "Kiểm tra lại kết nối mạng");
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        managerCardPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCard = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        idUserField = new javax.swing.JTextField();
        cardNoField = new javax.swing.JTextField();
        expiredDateField = new org.jdesktop.swingx.JXDatePicker();
        activateButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        regDate = new javax.swing.JTextField();
        activateCardPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        idUserActivateField = new javax.swing.JTextField();
        codeActivateField = new javax.swing.JTextField();
        expiredDateActivateField = new org.jdesktop.swingx.JXDatePicker();
        activateJButton = new javax.swing.JButton();
        codeActivateButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        dateRegistrationActivateField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        actDateField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        searchActivateField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        searchJButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableRegistrationCard = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách thẻ thành viên"));

        tableCard.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã độc giả", "Mã thẻ mượn", "Ngày đăng ký ", "Ngày hết hạn"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCardMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableCard);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin tìm kiếm"));

        jLabel6.setText("Thông tin tìm kiếm");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(244, 17, 17));
        jLabel7.setText("*Nhập mã độc giả hoặc mã thẻ mượn");

        searchButton.setText("Tìm kiếm");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel6)
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchButton)
                    .addComponent(jLabel7)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(searchButton)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin thẻ"));

        jLabel2.setText("Mã độc giả");

        jLabel3.setText("Mã thẻ mượn");

        jLabel4.setText("Ngày hết hạn");

        idUserField.setEditable(false);

        cardNoField.setEditable(false);

        activateButton.setText("Chỉnh sửa");
        activateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBorrowCard(evt);
            }
        });

        jButton1.setText("hủy kích hoạt");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deActiveCardClick(evt);
            }
        });

        jLabel9.setText("Ngày đăng ký");

        regDate.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(47, 47, 47)
                .addComponent(activateButton)
                .addGap(82, 82, 82))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9))
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idUserField)
                    .addComponent(cardNoField)
                    .addComponent(expiredDateField, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addComponent(regDate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {activateButton, jButton1});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(idUserField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cardNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(regDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(expiredDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activateButton)
                    .addComponent(jButton1))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout managerCardPanelLayout = new javax.swing.GroupLayout(managerCardPanel);
        managerCardPanel.setLayout(managerCardPanelLayout);
        managerCardPanelLayout.setHorizontalGroup(
            managerCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managerCardPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(managerCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(managerCardPanelLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(managerCardPanelLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );
        managerCardPanelLayout.setVerticalGroup(
            managerCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managerCardPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(managerCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, managerCardPanelLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, managerCardPanelLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)))
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin kích hoạt"));

        jLabel8.setText("Mã độc giả");

        jLabel10.setText("Ngày hết hạn");

        jLabel5.setText("Mã kích hoạt");

        idUserActivateField.setEditable(false);

        codeActivateField.setEditable(false);

        activateJButton.setText("Kích hoạt thẻ");
        activateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activateCardClick(evt);
            }
        });

        codeActivateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/ic_generate.png"))); // NOI18N
        codeActivateButton.setContentAreaFilled(false);
        codeActivateButton.setFocusPainted(false);
        codeActivateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getCodeActivateCard(evt);
            }
        });

        jLabel1.setText("Ngày đăng ký");

        dateRegistrationActivateField.setEditable(false);

        jLabel13.setText("Ngày kích hoạt");

        actDateField.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel5))
                                .addGap(38, 38, 38)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(codeActivateField, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(codeActivateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(expiredDateActivateField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(37, 37, 37)
                                        .addComponent(dateRegistrationActivateField, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(32, 32, 32)
                                        .addComponent(actDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel8)
                                .addGap(52, 52, 52)
                                .addComponent(idUserActivateField, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(123, 123, 123)
                                .addComponent(activateJButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(idUserActivateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(dateRegistrationActivateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(actDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(expiredDateActivateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(codeActivateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(codeActivateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(activateJButton)
                .addGap(42, 42, 42))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin tìm kiếm"));

        jLabel11.setText("Thông tin tìm kiếm");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(244, 17, 17));
        jLabel12.setText("*Nhập  mã độc giả,tên độc giả,......");

        searchJButton.setText("Tìm kiếm");
        searchJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doSearch(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel11)
                .addGap(35, 35, 35)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchJButton)
                    .addComponent(jLabel12)
                    .addComponent(searchActivateField, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchActivateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(searchJButton)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin thẻ chờ kích hoạt"));

        tableRegistrationCard.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã độc giả", "Tên độc giả", "Email", "Số điện thoại", "Ngày đăng ký", "Mã Thẻ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableRegistrationCard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableRegistrationCardMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableRegistrationCard);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 847, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout activateCardPanelLayout = new javax.swing.GroupLayout(activateCardPanel);
        activateCardPanel.setLayout(activateCardPanelLayout);
        activateCardPanelLayout.setHorizontalGroup(
            activateCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(activateCardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(activateCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(activateCardPanelLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        activateCardPanelLayout.setVerticalGroup(
            activateCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(activateCardPanelLayout.createSequentialGroup()
                .addGroup(activateCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(activateCardPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(activateCardPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLayeredPane1.setLayer(managerCardPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(activateCardPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managerCardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(activateCardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managerCardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(activateCardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Hệ thống");

        jMenu3.setText("Quản lý thẻ thành viên");

        jMenuItem4.setText("Tìm kiếm và chỉnh sửa");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setText("Kích hoạt thẻ ");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenu1.add(jMenu3);

        jMenuItem2.setText("Trở lại");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backMenuClick(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Thoát");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuClick(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getCodeActivateCard(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getCodeActivateCard
        // TODO add your handling code here:
        codeActivateField.setText(cardController.generateCodeActivateCard());
    }//GEN-LAST:event_getCodeActivateCard

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        showManagerCardPanel();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        showActivateCardPanel();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void tableRegistrationCardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableRegistrationCardMouseClicked
        // TODO add your handling code here:
        int row = tableRegistrationCard.getSelectedRow();
        if (row >= 0) {
            setTextForFieldActivateCard(row);
        }
    }//GEN-LAST:event_tableRegistrationCardMouseClicked

    private void doSearch(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doSearch
        // TODO add your handling code here:
        searchAllCardRegActivate(searchActivateField.getText().trim(), model);

    }//GEN-LAST:event_doSearch

    private void activateCardClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activateCardClick
        // TODO add your handling code here:
        activateCard();


    }//GEN-LAST:event_activateCardClick


    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        searchCardActive();

    }//GEN-LAST:event_searchButtonActionPerformed

    private void backMenuClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backMenuClick
        // TODO add your handling code here:
        new ManagementForm(idLib).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backMenuClick

    private void exitMenuClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuClick
        // TODO add your handling code here:
        new ChooseLoginForm().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_exitMenuClick

    private void tableCardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCardMouseClicked
        // TODO add your handling code here:
        int rowSelected = tableCard.getSelectedRow();
        if (rowSelected >= 0) {
            setTextForFieldInforCard(rowSelected);
        }
    }//GEN-LAST:event_tableCardMouseClicked

    private void deActiveCardClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deActiveCardClick
        // TODO add your handling code here:
        deActiveCard();

    }//GEN-LAST:event_deActiveCardClick

    private void editBorrowCard(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBorrowCard
        // TODO add your handling code here:
        String cardNo = cardNoField.getText();
        java.util.Date expired = expiredDateField.getDate();
        int result = cardController.updateCard(cardNo, expired);
        switch (result) {
            case CardController.RESULT_NULL_POINT:
                JOptionPane.showMessageDialog(this, "Lỗi truyền parameter");
                break;
            case CardController.RESULT_EXPRIED_FAIL:

                JOptionPane.showMessageDialog(this, "Hãy nhập lại hạn thẻ");
                break;
            case CardController.RESULT_SUCCESS:
                int row = tableCard.getSelectedRow();
                if (row >= 0) {

                    modelTableCard.setValueAt(new Date(expired.getTime()), row, 3);

                    model.fireTableDataChanged();
                }

                JOptionPane.showMessageDialog(this, "Cập nhật thẻ thành công");
                break;
            case CardController.RESULT_SQLITE:
                JOptionPane.showMessageDialog(this, "Kiểm tra lại kết nối mạng");
                break;
        }
    }//GEN-LAST:event_editBorrowCard
    private void deActiveCard() {
        String idcard = cardNoField.getText();
        int result = cardController.deActiveCard(idcard);
        switch (result) {
            case CardController.RESULT_NULL_POINT:
                JOptionPane.showMessageDialog(this, "Lỗi truyền parameter");
                break;
            case CardController.RESULT_SUCCESS:
                int row = tableCard.getSelectedRow();
                if (row >= 0) {
                    modelTableCard.removeRow(row);
                }

                JOptionPane.showMessageDialog(this, "Hủy kích hoạt thành công");
                break;
            case CardController.RESULT_SQLITE:
                JOptionPane.showMessageDialog(this, "Kiểm tra lại kết nối mạng");
                break;
        }
    }

    private void searchCardActive() {
        resetInforCardField();
        int result = cardController.searchCardActive(searchField.getText(), modelTableCard);
        switch (result) {
            case CardController.RESULT_NULL_POINT:
                JOptionPane.showMessageDialog(this, "Lỗi truyền parameter");
                break;
            case CardController.RESULT_NOT_FOUND:
                JOptionPane.showMessageDialog(this, "Không tìm thấy  thẻ nào");
                break;
            case CardController.RESULT_FOUND:
                break;
            case CardController.RESULT_SQLITE:
                JOptionPane.showMessageDialog(this, "Kiểm tratableCard lại kết nối mạng");
                break;
        }
    }

    private void activateCard() {
        int row = tableRegistrationCard.getSelectedRow();
        java.util.Date now = new java.util.Date();
        String id = idUserActivateField.getText();
        java.util.Date expiredDate = expiredDateActivateField.getDate();
        String codeActivate = codeActivateField.getText();
        String cardNo = tableRegistrationCard.getValueAt(row, 5).toString();

        int type = cardController.activateCard(id, now, expiredDate, codeActivate, cardNo);
        switch (type) {
            case MysqlBorrowCardDao.ACTIVATE_FAIL_EXPERIED:
                JOptionPane.showMessageDialog(this, "Hạn sử dụng thẻ không hợp lệ", "Thông báo", JOptionPane.ERROR_MESSAGE);
                break;
            case MysqlBorrowCardDao.ACTIVATE_FAIL_NULL_POINT:
                JOptionPane.showMessageDialog(this, "Thông tin kích hoạt chưa đủ", "Thông báo", JOptionPane.ERROR_MESSAGE);
                break;
            case MysqlBorrowCardDao.ACTIVATE_SUCCESS:
                model.removeRow(tableRegistrationCard.getSelectedRow());
                resetActivateField();
                JOptionPane.showMessageDialog(this, "Kích hoạt thẻ thành công,giờ bạn có thể mượn sách");
                break;
            case MysqlBorrowCardDao.ACTIVATE_FAIL_OTHER:
                JOptionPane.showMessageDialog(this, "Có lỗi xảy ra trong quá trình kích hoạt", "Thông báo", JOptionPane.ERROR_MESSAGE);
                break;
        }
    }

    private void setTextForFieldActivateCard(int rowSelected) {
        Date date = (Date) tableRegistrationCard.getValueAt(rowSelected, 4);
        idUserActivateField.setText((String) tableRegistrationCard.getValueAt(rowSelected, 0));
        dateRegistrationActivateField.setText(Utils.format(date));
        java.util.Date now = new java.util.Date();
        java.sql.Date actDate = new java.sql.Date(now.getTime());
        actDateField.setText(Utils.format(actDate));

    }

    private void setTextForFieldInforCard(int rowSelected) {
        idUserField.setText(tableCard.getValueAt(rowSelected, 0).toString());
        cardNoField.setText(tableCard.getValueAt(rowSelected, 1).toString());
        expiredDateField.setDate((java.util.Date) tableCard.getValueAt(rowSelected, 3));
        regDate.setText(tableCard.getValueAt(rowSelected, 2).toString());
    }

    private void resetActivateField() {
        idUserActivateField.setText("");
        dateRegistrationActivateField.setText("");
        actDateField.setText("");
        codeActivateField.setText("");
        expiredDateActivateField.getEditor().setText("");
    }

    private void resetInforCardField() {
        idUserField.setText("");
        cardNoField.setText("");
        expiredDateField.getEditor().setText("");
        regDate.setText("");
    }

    private void showManagerCardPanel() {
        managerCardPanel.setVisible(true);
        activateCardPanel.setVisible(false);
    }

    private void showActivateCardPanel() {
        managerCardPanel.setVisible(false);
        activateCardPanel.setVisible(true);
    }

    private void searchAllCardRegActivate(String key, DefaultTableModel model) {
        resetActivateField();
        int result = cardController.searchCardUnActive(key, model);
        switch (result) {
            case CardController.RESULT_NULL_POINT:
                JOptionPane.showMessageDialog(this, "Lỗi truyền parameter");
                break;
            case CardController.RESULT_NOT_FOUND:
                JOptionPane.showMessageDialog(this, "Không tìm thấy  thẻ nào");
                break;
            case CardController.RESULT_FOUND:
                break;
            case CardController.RESULT_SQLITE:
                JOptionPane.showMessageDialog(this, "Kiểm tra lại kết nối mạng");
                break;
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField actDateField;
    private javax.swing.JButton activateButton;
    private javax.swing.JPanel activateCardPanel;
    private javax.swing.JButton activateJButton;
    private javax.swing.JTextField cardNoField;
    private javax.swing.JButton codeActivateButton;
    private javax.swing.JTextField codeActivateField;
    private javax.swing.JTextField dateRegistrationActivateField;
    private org.jdesktop.swingx.JXDatePicker expiredDateActivateField;
    private org.jdesktop.swingx.JXDatePicker expiredDateField;
    private javax.swing.JTextField idUserActivateField;
    private javax.swing.JTextField idUserField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel managerCardPanel;
    private javax.swing.JTextField regDate;
    private javax.swing.JTextField searchActivateField;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton searchJButton;
    private javax.swing.JTable tableCard;
    private javax.swing.JTable tableRegistrationCard;
    // End of variables declaration//GEN-END:variables
}
